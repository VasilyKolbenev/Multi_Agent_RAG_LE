#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –≤–µ—Ä—Å–∏–∏.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python deploy.py "–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
"""

import sys
import subprocess
from pathlib import Path
from update_version import update_frontend_version

def run_command(cmd, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(cmd, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} - OK")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - –û–®–ò–ë–ö–ê:")
        print(f"   {e.stderr}")
        return False

def deploy_with_version_update(commit_message):
    """–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –¥–µ–ø–ª–æ—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –≤–µ—Ä—Å–∏–∏"""
    
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π MultiAgent-RAG Pro...")
    print("=" * 50)
    
    # 1. –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    print("1Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...")
    if not update_frontend_version():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é!")
        return False
    
    # 2. –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ git
    if not run_command("git add .", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ git"):
        return False
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    print("\nüìã –°—Ç–∞—Ç—É—Å git:")
    subprocess.run("git status --short", shell=True)
    
    # 4. –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    commit_cmd = f'git commit -m "{commit_message}"'
    if not run_command(commit_cmd, "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞"):
        return False
    
    # 5. –ü—É—à–∏–º –Ω–∞ GitHub
    if not run_command("git push origin main", "–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ GitHub"):
        return False
    
    print("\nüéâ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
    print("üì± Frontend: https://vasilykolbenev.github.io/multiagent-rag-pro/")
    print("üñ•Ô∏è Backend: https://multiagentragle-production.up.railway.app")
    print("üìä –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: architecture_diagrams.html")
    print("\nüí° –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl+F5) —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è!")
    
    return True

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("‚ùå –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π!")
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python deploy.py \"–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π\"")
        print("–ü—Ä–∏–º–µ—Ä: python deploy.py \"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω LangExtract API key\"")
        sys.exit(1)
    
    commit_message = sys.argv[1]
    deploy_with_version_update(commit_message)
